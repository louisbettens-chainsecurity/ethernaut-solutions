// SPDX-License-Identifier: MIT
pragma solidity ^0.8.8;

import "forge-std/Test.sol";
import "src/dex/Dex.sol";
import "src/dex/Exploit.sol";

contract DexTest is Test {
    Dex dex;
    Exploit exploit;
    address token1;
    address token2;

    function setUp() public {
        dex = new Dex();
        token1 = address(new SwappableToken(address(dex), "T1", "T1", 110));
        token2 = address(new SwappableToken(address(dex), "T2", "T2", 110));
        ERC20(token1).transfer(address(dex), 100);
        ERC20(token2).transfer(address(dex), 100);
        dex.setTokens(address(token1), address(token2));
        exploit = new Exploit();
    }

    function testExploit() public {
        ERC20(token1).transfer(address(exploit), 10);
        ERC20(token2).transfer(address(exploit), 10);
        exploit.yoink(dex);
        console.log(dex.balanceOf(token1, address(dex)));
        console.log(dex.balanceOf(token2, address(dex)));
    }
}
