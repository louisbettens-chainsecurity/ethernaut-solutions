// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.20;

import "forge-std/Test.sol";
import "src/dex2/DexTwo.sol";
import "src/dex2/Exploit.sol";

contract DexTwoTest is Test {
    DexTwo public dex;
    Exploit public exploit;
    address public token1;
    address public token2;

    function setUp() public {
        dex = new DexTwo();
        token1 = address(new SwappableTokenTwo(address(dex), "T1", "T1", 10**20));
        token2 = address(new SwappableTokenTwo(address(dex), "T2", "T2", 10**20));
        dex.setTokens(token1, token2);
        dex.approve(address(dex), type(uint256).max);
        dex.add_liquidity(token1, 9 * 10 ** 19);
        dex.add_liquidity(token2, 9 * 10 ** 19);
    }

    function testExploit() public {
        exploit = new Exploit();
        exploit.yoink(dex);
        assertEq(dex.balanceOf(token1, address(dex)), 0);
        assertEq(dex.balanceOf(token2, address(dex)), 0);
    }
}
